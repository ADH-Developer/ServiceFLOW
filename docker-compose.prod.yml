version: "3"

services:
  server:
    container_name: server
    build:
      context: ./server
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - "8000:8000"
    volumes:
      - ./server:/src
    env_file:
      - .env.prod
    environment:
      - DJANGO_DEBUG=False
      - GUNICORN_WORKERS=5
    command: >
      sh -c "sh migrations.sh && gunicorn -w 5 --reload -b 0.0.0.0:8000 --log-level info server.wsgi"
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    container_name: client
    build: ./client
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - "3000:3000"
    volumes:
      - ./client:/src
    command: >
      sh -c "npm install -g npm@latest && npm install && npm run build && npm run start"
    depends_on:
      - server
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    container_name: db
    image: postgres
    env_file:
      - .env.prod
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
  run_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  cache_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
